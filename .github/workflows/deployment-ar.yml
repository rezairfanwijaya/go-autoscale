name: Proper Deployment Golang Auto Scale 

on:
  push:
    branches:
     - 'main'

env: 
  APP_PORT: ${{ vars.APP_PORT }}
  WORKER_PORT: ${{ vars.WORKER_PORT }}
  APP_NAME: ${{ vars.APP_NAME }}

jobs: 
  check_tag:
    steps:
      run: echo ${{ github.ref }}
  # build_app:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v4 

  #     - name: Set up Go
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: "1.21"
  #         cache: true

  #     - name: Build binary
  #       run: |
  #         go build -o go-autoscale
      
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ env.APP_NAME }}-artifacts
  #         path: |
  #           ${{ env.APP_NAME }}
      
  # build_and_push_docker_image:
  #   needs: build_app
  #   runs-on: ubuntu-20.04
  #   outputs:
  #     app_template_name: ${{ steps.template_and_tag.outputs.APP_TEMPLATE_NAME }}
  #     worker_template_name: ${{ steps.template_and_tag.outputs.WORKER_TEMPLATE_NAME }}
  #     docker_image_tag: ${{ steps.template_and_tag.outputs.TAG}}
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v4 

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: ${{ env.APP_NAME }}-artifacts

  #     - name: Authenticate with Google Cloud
  #       uses: google-github-actions/auth@v1
  #       with:
  #         credentials_json: ${{ secrets.GCP_SA_KEY }}

  #     - name: Set up Google Cloud SDK
  #       uses: google-github-actions/setup-gcloud@v2

  #     - name: Set the TAG value
  #       id: template_and_tag
  #       run: |
  #         CURRENT_DATE=$(date +%Y-%m-%d-%H-%M-%S)
  #         TAG="version-$CURRENT_DATE"
  #         APP_TEMPLATE_NAME="go-autoscale-cicd-app-$CURRENT_DATE"
  #         WORKER_TEMPLATE_NAME="go-autoscale-cicd-worker-$CURRENT_DATE"ma
  #         echo "TAG=$TAG" >> $GITHUB_ENV  # Set TAG as an environment variable
  #         echo "TAG=$TAG" >> $GITHUB_OUTPUT  # Set TAG as an environment variable
  #         echo "APP_TEMPLATE_NAME=$APP_TEMPLATE_NAME" >> $GITHUB_OUTPUT  # Set TEMPLATE_NAME as output to use by another job
  #         echo "WORKER_TEMPLATE_NAME=$WORKER_TEMPLATE_NAME" >> $GITHUB_OUTPUT  # Set TEMPLATE_NAME as output to use by another job

  #     - name: Build Docker image
  #       run: |
  #         docker --version
  #         echo $APP_PORT
  #         echo ${{env.APP_PORT}}
  #         docker build \
  #         --build-arg APP_PORT=$APP_PORT \
  #         --build-arg WORKER_PORT=$WORKER_PORT \
  #         --build-arg APP_NAME=$APP_NAME \
  #         -t asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/$APP_NAME:$TAG .
      
